package lambda;

public class TestMyNumber {

	public static void main(String[] args) {
		MyNumber max = (x, y) -> (x >= y) ? x : y;	//람다식을 인터페이스형 max 변수에 대입
		System.out.println(max.getMax(10, 20));		//인터페이스형 변수로 메서드 호출
	}
	/*
	 * 함수형 프로그래밍은 순수 함수를 구현하고 호출함으로써 외부 자료에 부수적인 영향을 주지 않도록 구현하는 방식이다.
	 * 순수 함수란 매개변수만을 사용하여 만드는 함수이다.
	 * 즉 함수 내부에서 함수 외부에 있는 변수를 사용하지 않아 함수가 수행되더라도 외부에 영향을 주지 않는다.
	 * 
	 * 객체 지향 언어가 객체를 기반으로 구현하는 방식이라면 함수형 프로그램은 함수를 기반으로 하고, 자료를 입력받아 구현하는 방식이다.
	 * 함수가 입력받은 자료 이외에 외부 자료에 영향을 미치지 않기 때문에 여러 자료 동시에 처리하는 방렬 처리에 적합하며, 안정되고 확장성 있는 프로그램을 개발할 수 있는 장점이 있다.
	 * 또 순수 함수로 구현된 함수형 프로그램은 함수 기능이 자료에 독립적일 수 있도록 보장한다.
	 * 즉 동일한 입력에 대해서는 동일한 출력을 보장하고, 다양한 자료에 같은 기능을 수행할 수 있다.
	 * 언뜻 듣기에도 우리가 지금까지 배운 객체 지향 프로그래밍과는 그 기반이 다르다는 것을 알 수 있다.
	 * 
	 * 
	 */

}
