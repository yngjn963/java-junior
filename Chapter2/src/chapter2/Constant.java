package chapter2;

public class Constant {

	public static void main(String[] args) {
		final int MAX_NUM = 100;	//선언과 동시에 초기화
		final int MIN_NUM;
		
		MIN_NUM = 0;	//사용하기 전에 초기화. 초기화하지 않으면 오류 발생
		
		System.out.println(MAX_NUM);
		System.out.println(MIN_NUM);
		
		//MAX_NUM = 1000;	//오류 발생. 상수는 값을 변경할 수 없음
		
		/*
		 * 상수를 사용하면 편리한 이유
		 * 예를 들어 어떤 학급의 학생 수가 최대 30명이라는 코드를 작성하는 경우
		 * 만약 최대 학생 수가 30명에서 35명으로 늘어난다면 어떻게 해야 할까?
		 * 프로그램에서 값을 30을 쓴 부분을 모두 찾아서 고쳐야 하므로 번거롭다.
		 * 하지만 상수로 선언해 사용했다면 상수를 선언한 부분의 값만 변경해 주면 된다.
		 */
		
		/*
		 * 리터럴
		 * 리터럴이란 프로그램에서 사용하는 모든 숫자, 문자, 논리값(true, false)을 일컫는 말
		 * 'A', 10, 3.14와 같은 문자와 숫자를 '리터럴' 혹은 '리터럴 상수'라고 한다.
		 * 리터럴은 변수나 상수 값으로 대입할 수 있다.
		 * 리터럴은 프로그램이 시작할 때 시스템에 같이 로딩되어 특정 메모리 공간인 상수 풀(constant)에 놓인다.
		 * 예를 들어 int num = 3; 문장에서 값 3이 메모리 공간 어딘가에 존재해야 num 변수에 그 값을 복사할 수 있다.
		 * 즉 숫자가 변수에 대입되는 과정은 일단 숫자 값이 어딘가 메모리에 쓰여 있고, 이 값이 다시 변수 메모리에 복사되는 것이다.
		 * 리터럴 -(로딩)-> 상수 풀 -(대입/복사)-> 변수
		 */
	}

}
